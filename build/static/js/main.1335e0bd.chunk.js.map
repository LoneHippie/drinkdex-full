{"version":3,"sources":["components/Loading.js","components/Login.js","components/SignUp.js","components/AuthenticateForm.js","components/UserMenu.js","components/BlankState.js","components/Header.js","components/SaveButton.js","components/CardLarge.js","components/CardFull.js","components/CardMini.js","components/DrinkGrid.js","components/Home.js","components/CreateDrinkForm.js","components/NavOptions.js","components/Navbar.js","components/App.js","index.js"],"names":["Loading","className","src","alt","Login","useState","formEmail","setFormEmail","formPassword","setFormPassword","authMessage","setAuthMessage","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","result","json","response","status","message","window","location","reload","console","log","id","onSubmit","submitLogin","required","type","value","onChange","target","handleChangeEmail","placeholder","htmlFor","minLength","handleChangePassword","SignUp","formName","setFormName","formPasswordConfirm","setFormPasswordConfirm","submitSignUp","handleChangeName","handleChangePasswordConfirm","AuthenticateForm","props","closeAuthenticate","formState","setFormState","style","height","onClick","checked","toggleForm","UserMenu","user","drinks","undefined","createdDrinks","setCreatedDrinks","useEffect","signedDrinks","filter","el","createdBy","_id","activeForm","setActiveForm","name","setName","email","setEmail","password","setPassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","clearFields","handleOpenForm","handleCloseForm","changeField","bodyObj","update","ok","includes","document","getElementById","textContent","sent","savedDrinks","length","username","handleChangeNewPassword","handleChangeNewPasswordConfirm","logoutUser","BlankState","Header","loggedStatus","backHome","menuOpen","setMenuOpen","display","classList","remove","add","SaveButton","drink","refreshUser","isAuthor","isSaved","setIsSaved","saveDrink","pointerEvents","route","setTimeout","then","res","err","some","CardLarge","randomDrink","openFull","coverImage","width","description","CardFull","closeFull","confirmationOpen","setConfirmationOpen","closeConfirmation","imageId","arrCategories","categories","map","spiritCategoires","spirits","index","drinkTags","deleteDrink","ingredients","instructions","CardMini","imageFallback","DrinkGrid","drinkResults","gridName","openFullDisplay","ID","closeFullDisplay","allCards","Home","pendingId","CreateDrinkForm","formSummary","setFormSummary","formIngredients","setFormIngredients","ingredientSearch","setIngredientSearch","formInstructions","setFormInstructions","formCategories","setFormCategories","formImage","setFormImage","formUrl","setFormUrl","formHandlers","replace","toLowerCase","item","getAttribute","newArr","curIndex","slice","splice","push","pop","color","background","removedArr","files","fileName","enums","formData","FormData","append","imageRes","image","drinkBody","data","imagePath","newDrink","encType","submitDrink","pattern","maxLength","rows","filteredIngredients","firstPass","secondPass","ingredientSearchbar","accept","readOnly","form","NavOptions","navState","toggleToGrid","selectedOption","setSelectedOption","create","Navbar","openOption","activeStatus","App","setUser","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","credentials","resJson","setDrinks","setRandomDrink","allDrinks","random","Math","floor","setDrinkResults","gridState","setGridState","search","results","setNavState","forEach","btn","querySelector","openCard","ReactDOM","render"],"mappings":"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","file":"static/js/main.1335e0bd.chunk.js","sourcesContent":["import React from 'react';\n\nimport './../styles/loading.scss';\n\n//load screen component for hiding UI while intial fetch for user is pending\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n\n            <div className=\"sign-container\">\n                <span className=\"sign-container--text\">Welcome Back</span>\n\n                <div>\n                    <img\n                        className=\"sign-container--image\"\n                        src=\"images/icons/shaker.svg\"\n                        alt=\"cocktail shaker vector\"\n                    ></img>\n                </div>\n            </div>\n            \n            <div className=\"loader\">Loading</div>\n\n        </div>\n    )\n}\n\nexport default Loading;","import React, { useState } from 'react';\n\nimport './../styles/login.scss';\n\nconst Login = () => {\n\n    const [ formEmail, setFormEmail ] = useState('');\n    const [ formPassword, setFormPassword ] = useState('');\n\n    const [ authMessage, setAuthMessage ] = useState('');\n\n    function handleChangeEmail(e) {\n        setFormEmail(e.target.value);\n    }\n\n    function handleChangePassword(e) {\n        setFormPassword(e.target.value)\n    }\n\n    //log in and refresh page\n    async function submitLogin(e) {\n        e.preventDefault();\n        try {\n            let result = await fetch('api/v1/users/login', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    'email': formEmail,\n                    'password': formPassword\n                })\n            });\n\n            const response = await result.json();\n\n            if (response.status === 'fail') {\n                return setAuthMessage(`*${response.message}`);\n            } else {\n                setAuthMessage('Login successful!');\n            }\n\n            //reset window\n            window.location.reload();\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <form\n            id=\"authenticate-login\"\n            className=\"authenticate__form\"\n            onSubmit={(e) => submitLogin(e)}\n        >\n\n            <h3 className=\"authenticate--title\">Welcome</h3>\n\n            <span className=\"authenticate--message\"></span>\n\n            <input\n                required={true}\n                className=\"authenticate__form--input\" \n                type=\"email\" \n                id=\"authenticate-email\"\n                value={formEmail}\n                onChange={(e) => handleChangeEmail(e)}\n                placeholder=\"Your Email\"\n            >\n            </input>\n            <label className=\"authenticate__form--label\" htmlFor=\"authenticate-email\">Email</label>\n\n            <input\n                className=\"authenticate__form--input\" \n                type=\"password\"\n                id=\"authenticate-password\"\n                value={formPassword}\n                minLength=\"8\"\n                onChange={(e) => handleChangePassword(e)}\n                placeholder=\"Your Password\"\n            >\n            </input>\n            <label className=\"authenticate__form--label\" htmlFor=\"authenticate-password\">Password</label>\n\n            <input className=\"authenticate__form--btn\" type=\"submit\" value=\"Log in\"></input>\n\n            <span className=\"authenticate--message\">{authMessage}</span>\n\n        </form>\n    )\n};\n\nexport default Login\n","import React, { useState } from 'react';\n\nimport './../styles/login.scss';\n\nconst SignUp = () => {\n\n    const [ formName, setFormName ] = useState('');\n    const [ formEmail, setFormEmail ] = useState('');\n    const [ formPassword, setFormPassword ] = useState('');\n    const [ formPasswordConfirm, setFormPasswordConfirm ] = useState('');\n\n    const [ authMessage, setAuthMessage ] = useState('');\n\n    function handleChangeName(e) {\n        setFormName(e.target.value);\n    }\n\n    function handleChangeEmail(e) {\n        setFormEmail(e.target.value);\n    }\n\n    function handleChangePassword(e) {\n        setFormPassword(e.target.value);\n    }\n\n    function handleChangePasswordConfirm(e) {\n        setFormPasswordConfirm(e.target.value);\n    }\n\n    async function submitSignUp(e) {\n        e.preventDefault();\n        try {\n\n            if (formPassword !== formPasswordConfirm) {\n                return setAuthMessage('*Password does not match confirmation');\n            };\n\n            let result = await fetch('api/v1/users/signup', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    'username': formName,\n                    'email': formEmail,\n                    'password': formPassword,\n                    'passwordConfirm': formPasswordConfirm\n                })\n            });\n\n            const response = await result.json();\n\n            if (response.status === 'error') {\n                console.log('Sign up failed, please check info');\n                return;\n            } else {\n                setAuthMessage('Sign up successful!');\n            }\n\n            //reset window\n            window.location.reload();\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <form\n            id=\"authenticate-signup\"\n            className=\"authenticate__form\"\n            onSubmit={(e) => submitSignUp(e)}\n        >\n\n            <h3 className=\"authenticate--title\">Get Started</h3>\n\n            <input\n                required={true}\n                className=\"authenticate__form--input\" \n                type=\"text\" \n                id=\"authenticate-name\"\n                value={formName}\n                minLength=\"2\"\n                onChange={(e) => handleChangeName(e)}\n                placeholder=\"Pick a name\"\n            >\n            </input>\n            <label className=\"authenticate__form--label\" htmlFor=\"authenticate-email\">Username</label>\n\n            <input\n                required={true}\n                className=\"authenticate__form--input\" \n                type=\"email\" \n                id=\"authenticate-email\"\n                value={formEmail}\n                onChange={(e) => handleChangeEmail(e)}\n                placeholder=\"Your Email\"\n            >\n            </input>\n            <label className=\"authenticate__form--label\" htmlFor=\"authenticate-email\">Email</label>\n\n            <input\n                required={true}\n                className=\"authenticate__form--input\" \n                type=\"password\"\n                id=\"authenticate-password\"\n                value={formPassword}\n                minLength=\"8\"\n                onChange={(e) => handleChangePassword(e)}\n                placeholder=\"Your Password\"\n            >\n            </input>\n            <label className=\"authenticate__form--label\" htmlFor=\"authenticate-password\">Password</label>\n\n            <input\n                required={true}\n                className=\"authenticate__form--input\" \n                type=\"password\"\n                id=\"authenticate-password-confirm\"\n                value={formPasswordConfirm}\n                minLength=\"8\"\n                onChange={(e) => handleChangePasswordConfirm(e)}\n                placeholder=\"Confirm Your Password\"\n            >\n            </input>\n            <label className=\"authenticate__form--label\" htmlFor=\"authenticate-password\">Confirm Password</label>\n\n            <input className=\"authenticate__form--btn\" type=\"submit\" value=\"Sign Up\"></input>\n\n            <span className=\"authenticate--message\">{authMessage}</span>\n\n        </form>\n    )\n}\n\nexport default SignUp;","import React, { useState } from 'react';\n\nimport Login from './Login';\nimport SignUp from './SignUp';\n\nimport './../styles/login.scss';\n\nconst AuthenticateForm = (props) => {\n\n    const { closeAuthenticate } = props;\n\n    const [ formState, setFormState ] = useState(false);\n\n    function toggleForm(e) {\n        setFormState(e.target.checked);\n    };\n\n    const formHeight = () => formState ? '87.5%' : '75%';\n\n    return (\n        <div \n            className=\"authenticate\"\n            id=\"authenticate-form\"\n            style={{height: formHeight()}}\n        >\n\n            <div className=\"switch\">\n                <input type=\"checkbox\" id=\"switch\" onClick={(e) => toggleForm(e)}/>\n                <label className=\"switch-label\" htmlFor=\"switch\">Login</label>\n                <span className=\"switch-title\">{formState ? 'Login' : 'Sign Up'}</span>\n            </div>\n\n            <span className=\"authenticate--close\" onClick={() => closeAuthenticate()}>\n                X\n            </span>\n\n            {\n                formState ? (\n                    <SignUp />\n                ) : (\n                    <Login />\n                )\n            }\n\n        </div>\n    )\n};\n\n\nexport default AuthenticateForm;","import React, { useState, useEffect } from 'react';\n\nimport './../styles/usermenu.scss';\n\nconst UserMenu = (props) => {\n\n    const { user, drinks } = props;   \n    \n    const [ createdDrinks, setCreatedDrinks ] = useState(undefined);\n\n    //find created drinks if they exist\n    useEffect(() => {\n        const signedDrinks = drinks.filter(el => {\n            if (el.createdBy !== undefined) {\n                if (el.createdBy[1] === user._id) {\n                    return el;\n                }\n            }\n        });\n\n        setCreatedDrinks(signedDrinks);\n\n    }, [drinks, user._id]);\n\n    const [ activeForm, setActiveForm ] = useState(undefined);\n\n    const [ name, setName ] = useState('');\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ newPassword, setNewPassword ] = useState('');\n    const [ newPasswordConfirm, setNewPasswordConfirm ] = useState('');\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    };\n\n    function handleChangeEmail(e) {\n        setEmail(e.target.value);\n    };\n\n    function handleChangePassword(e) {\n        setPassword(e.target.value);\n    };\n\n    function handleChangeNewPassword(e) {\n        setNewPassword(e.target.value);\n    };\n\n    function handleChangeNewPasswordConfirm(e) {\n        setNewPasswordConfirm(e.target.value);\n    };\n\n    function clearFields() {\n        setName('');\n        setEmail('');\n        setPassword('');\n        setNewPassword('');\n        setNewPasswordConfirm('');\n    };\n\n    function handleOpenForm(e) {\n        clearFields();\n        setActiveForm(e.target.id);\n    };\n\n    function handleCloseForm() {\n        clearFields();\n        setActiveForm(undefined);\n    };\n\n    const nameField = () => {\n        if (activeForm === 'name') {\n            return (\n                <form onSubmit={(e) => changeField(e)}>\n                    <span className=\"cancel\" onClick={() => handleCloseForm()}>X</span>\n                    <input\n                        id=\"input-name\"\n                        placeholder={user.username}\n                        type=\"text\"\n                        onChange={(e) => handleChangeName(e)}\n                        value={name}\n                        minLength=\"2\"\n                        required={true}\n                    >\n                    </input>\n                    <label htmlFor=\"input-name\">New Username</label>\n                    <button \n                        type=\"submit\"\n                    >\n                        Change Name\n                    </button>\n                    <div id=\"auth-message\"></div>\n                </form>\n            )\n        } else {\n            return (\n                <>\n                    <span>{user.username}</span>\n                    <button \n                        id=\"name\"\n                        onClick={(e) => handleOpenForm(e)}\n                    >\n                        Change Name\n                    </button>\n                </>\n            )\n        }\n    };\n\n    const emailField = () => {\n        if (activeForm === 'email') {\n            return (\n                <form onSubmit={(e) => changeField(e)}>\n                    <span className=\"cancel\" onClick={() => handleCloseForm()}>X</span>\n                    <input\n                        id=\"input-email\"\n                        placeholder={user.email}\n                        type=\"email\"\n                        onChange={(e) => handleChangeEmail(e)}\n                        value={email}\n                        minLength=\"2\"\n                        required={true}\n                    >\n                    </input>\n                    <label htmlFor=\"input-name\">New email address</label>\n\n                    <button \n                        type=\"submit\"\n                    >\n                        Change Email\n                    </button>\n                    <div id=\"auth-message\"></div>\n                </form>\n            )\n        } else {\n            return (\n                <>\n                    <span>{user.email}</span>\n                    <button \n                        id=\"email\"\n                        onClick={(e) => handleOpenForm(e)}\n                    >\n                        Change Email\n                    </button>\n                </>\n            )\n        }\n    };\n\n    const passwordField = () => {\n        if (activeForm === 'password') {\n            return (\n                <form onSubmit={(e) => changeField(e)}>\n                    <span className=\"cancel\" onClick={() => handleCloseForm()}>X</span>\n                    <input\n                        id=\"input-password-current\"\n                        placeholder=\"current password\"\n                        type=\"password\"\n                        onChange={(e) => handleChangePassword(e)}\n                        value={password}\n                        minLength=\"8\"\n                        required={true}\n                    >\n                    </input>\n                    <label htmlFor=\"input-name\">Password Verification</label>\n\n                    <input\n                        id=\"input-password-new\"\n                        placeholder=\"choose a password\"\n                        type=\"password\"\n                        onChange={(e) => handleChangeNewPassword(e)}\n                        value={newPassword}\n                        minLength=\"8\"\n                        required={true}\n                    >\n                    </input>\n                    <label htmlFor=\"input-name\">New Password</label>\n\n                    <input\n                        id=\"input-password-new-confirm\"\n                        placeholder=\"confirm new password\"\n                        type=\"password\"\n                        onChange={(e) => handleChangeNewPasswordConfirm(e)}\n                        value={newPasswordConfirm}\n                        minLength=\"8\"\n                        required={true}\n                    >\n                    </input>\n                    <label htmlFor=\"input-name\">Password Confirmation</label>\n\n                    <button \n                        type=\"submit\"\n                    >\n                        Change Password\n                    </button>\n                    <div id=\"auth-message\"></div>\n                </form>\n            )\n        } else {\n            return (\n                <button \n                    id=\"password\"\n                    onClick={(e) => handleOpenForm(e)}\n                >\n                    Change Password\n                </button>\n            )\n        }\n    };\n\n    async function changeField(e) {\n        e.preventDefault();\n\n        let bodyObj;\n\n        switch(true) {\n            case activeForm === 'name':\n                bodyObj = { 'username': name };\n                break;\n            case activeForm === 'email':\n                bodyObj = { 'email': email };\n                break;\n            case activeForm === 'password':\n                bodyObj = { \n                    'passwordCurrent': password, \n                    'password': newPassword ,\n                    'passwordConfirm': newPasswordConfirm\n                };\n                break;\n            default:\n                console.log('No active forms found');\n        };\n\n        try {\n            let update;\n\n            if (activeForm !== 'password') {\n                update = await fetch('api/v1/users/updateMe', {\n                    method: 'PATCH',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-type': 'application/json'\n                    },\n                    body: JSON.stringify(bodyObj)\n                });\n            } else {\n                update = await fetch('api/v1/users/updateMyPassword', {\n                    method: 'PATCH',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-type': 'application/json'\n                    },\n                    body: JSON.stringify(bodyObj)\n                });\n            };\n\n            if (update.ok) {\n                console.log('User updated!');\n                // console.log(update);\n                window.location.reload();\n            } else {\n                const response = await update.json();\n\n                if (response.message.includes('is incorrect')) {\n                    document.getElementById('auth-message').textContent = \"Current password is incorrect\";\n                } else {\n                    document.getElementById('auth-message').textContent = \"Something went wrong, please try again\";\n                }\n            }\n\n        } catch (err) {\n            console.log('oops');\n        }\n    };\n\n    //log out the current user and refresh (working)\n    async function logoutUser() {\n        try {\n            const result = await fetch('/api/v1/users/logout', {\n                method: 'post'\n            });\n\n            const sent = await result;\n\n            console.log(sent);\n\n            window.location.reload();\n\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <div className=\"menu\" id=\"menu\">\n\n            <section className=\"menu-overview\">\n\n                <div className=\"menu-overview__header\">\n                    <h3>My Profile</h3>\n                    {/* <label htmlFor=\"profile-name\">Username</label> */}\n                </div>\n\n                <div className=\"menu-overview__stats\">\n                    <div className=\"menu-overview__stats--saved\">\n                        <span>{`Saved Drinks: ${user.savedDrinks.length}`}</span>\n                        <i></i>\n                    </div>\n                    <div className=\"menu-overview__stats--created\">\n                        <span>{`Created Drinks: ${createdDrinks ? createdDrinks.length : '---'}`}</span>\n                        <i></i>\n                    </div>\n                </div>\n\n            </section>\n\n            <section className=\"menu-profile\">\n\n                <div className=\"menu-profile--field\">\n                    <h4>Username</h4>\n                    {nameField()}\n                </div>\n\n                <div className=\"menu-profile--field\">\n                    <h4>Email</h4>\n                    {emailField()}\n                </div>\n\n                <div className=\"menu-profile--field\">\n                    <h4>Password</h4>\n                    {passwordField()}\n                </div>\n\n            </section>\n\n            <section className=\"menu-auth\">\n\n                <button onClick={() => logoutUser()}>\n                    Log out\n                </button>\n\n            </section>\n\n        </div>\n    )\n};\n\nexport default UserMenu;","import React from 'react'\n\nfunction BlankState() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default BlankState\n","import React, { useState } from 'react';\n\nimport AuthenticateForm from './AuthenticateForm';\nimport UserMenu from './UserMenu';\nimport BlankState from './BlankState';\n\nimport './../styles/header.scss';\n\nconst Header = (props) => {\n\n    const { user, loggedStatus, backHome, drinks } = props;\n\n    const [ menuOpen, setMenuOpen ] = useState(false)\n\n    const profileBtn = () => {\n\n        const menuButton = () => {\n            if (menuOpen) {\n                return (\n                    <div className=\"header__profile\">\n                        <img \n                            className=\"header__profile--close\"\n                            id=\"nav-close\"\n                            onClick={() => closeMenu()}\n                            src=\"images/icons/cancel.svg\"\n                            alt=\"close profile options\"\n                        >\n                        </img>\n                        <label className=\"header__profile--label\" htmlFor=\"nav-close\" >Close</label>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"header__profile\">\n                        <img\n                            className=\"header__profile--btn\"\n                            id=\"nav-login\"\n                            onClick={() => openMenu()}\n                            src=\"images/icons/user.svg\"\n                            alt=\"user profile options\"\n                        >\n                        </img>\n                        <label className=\"header__profile--label\" htmlFor=\"nav-login\">My Profile</label>\n                    </div>\n                )\n            }\n        }\n\n        if (!loggedStatus) {\n            return (\n                <div className=\"header__profile\">\n                    <img \n                        className=\"header__profile--guest\" \n                        id=\"nav-login\"\n                        onClick={() => openAuthenticate()}\n                        src=\"images/icons/question.svg\"\n                        alt=\"guest profile icon\"\n                    >\n                    </img>\n                    <label className=\"header__profile--label\" htmlFor=\"nav-login\">Login</label>\n                </div>\n            );\n        } else {\n            return menuButton();\n        };\n    };\n\n    function openAuthenticate() {\n        document.getElementById('authenticate-form').style.display = \"block\";\n        document.getElementById('authenticate-form-blur').style.display = \"block\";\n        document.getElementById('nav').style.display = \"none\";\n    }\n\n    function closeAuthenticate() {\n        document.getElementById('authenticate-form').style.display = \"none\";\n        document.getElementById('authenticate-form-blur').style.display = \"none\";\n        document.getElementById('nav').style.display = \"flex\";\n    }\n\n    function openMenu() {\n        setMenuOpen(true);\n        document.getElementById('header').classList.add('menu-active');\n        document.getElementById('menu').style.display = \"block\";\n    }\n\n    function closeMenu() {\n        setMenuOpen(false);\n        document.getElementById('header').classList.remove('menu-active');\n        document.getElementById('menu').style.display = \"none\";\n    }\n\n    return (\n        <header className=\"header\" id=\"header\">\n            <div className=\"header__title-container\">\n                <h1 className=\"header__title-container--title\" onClick={() => backHome()}>Drinkdex</h1>\n            </div>\n\n            {profileBtn()}\n\n            <AuthenticateForm\n                closeAuthenticate = {closeAuthenticate}\n            />\n\n            { loggedStatus ? (\n                <UserMenu\n                    user = {user}\n                    drinks = {drinks}\n                />\n            ) : (\n                <BlankState /> \n            )}\n\n            <div \n                className=\"authenticate-form-blur\"\n                id=\"authenticate-form-blur\"\n                onClick={() => closeAuthenticate()}\n            >\n            </div>\n            \n        </header>\n    )\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\n\nconst SaveButton = (props) => {\n\n    const { drink, user, className, refreshUser, isAuthor } = props;\n\n    const [ isSaved, setIsSaved ] = useState(false);\n\n    //check and set whether drink is already saved or not\n    useEffect(() => {\n        const saved = () => {\n            if (user !== undefined && drink !== undefined) {\n                return user.savedDrinks.some(el => el.id === drink);\n            } else {\n                return false;\n            }\n        };\n\n        setIsSaved(saved());\n    }, [user, drink]);\n\n    async function saveDrink(e) {\n\n        //disable clicking while patch request is in process\n        e.target.style.pointerEvents = 'none';\n\n        //set patch route\n        const route = isSaved ? 'removeDrink' : 'addDrink';\n\n        try {\n            setTimeout(() => {\n                fetch(`/api/v1/users/${route}/${drink}`, { \n                    method: 'PATCH'\n                })\n                .then(res => {\n                    if (res.ok && !isSaved) {\n                        refreshUser();\n                    }\n                    if (res.ok && isSaved) {\n                        refreshUser();\n                    }\n\n                    setTimeout(() => {\n                        e.target.style.pointerEvents = 'auto';\n                    }, 500);\n    \n                    return res;\n                });\n            }, 100);\n\n        } catch (err) {\n            console.log('An error occurred');\n        }\n    };\n    \n    const btnSave = () => {\n\n        if (user === undefined) {\n            return <img\n                        className={`${className}--btn-save inactive`} \n                        src=\"images/icons/heart-disabled.svg\"\n                        alt=\"save drink button\"\n                    >\n                    </img>\n        } else {\n            if (isAuthor) {\n                return <img \n                            className={`${className}--btn-save author`}\n                            src=\"images/icons/signature.svg\"\n                            alt=\"creator of drink icon\"\n                        >\n                        </img>\n            } else if (isSaved) {\n                return <img\n                            className={`${className}--btn-save favorited`}\n                            onClick={(e) => saveDrink(e)}\n                            src=\"images/icons/heart-full.svg\"\n                            alt=\"save drink button\"\n                        >\n                        </img>\n            } else {\n                return (\n                    <img\n                        className={`${className}--btn-save active`}\n                        onClick={(e) => saveDrink(e)}\n                        src=\"images/icons/heart-empty.svg\"\n                        alt=\"save drink button\"\n                    >\n                    </img>\n                )\n            }\n        }\n    };\n\n    return (\n        <>\n            {btnSave()}\n        </>\n    )\n};\n\nexport default SaveButton;","import React from 'react'\n\nimport SaveButton from './SaveButton';\nimport BlankState from './BlankState';\n\nimport './../styles/cardLarge.scss';\n\nconst CardLarge = (props) => {\n\n    const { user, randomDrink, id, openFull, refreshUser } = props;\n\n    const coverImage = () => {\n        return randomDrink && randomDrink?.coverImage !== undefined ? `${randomDrink.coverImage}` : \"https://media.istockphoto.com/vectors/alcohol-cocktail-drink-vector-neon-icon-food-blue-neon-illustration-vector-id1215989223?k=6&m=1215989223&s=170667a&w=0&h=wORytj0B6AzIiEDvf-5lCwTqw_i_3J6ASZPP9LkfE6s=\";\n    };\n\n    const isAuthor = () => {\n        if (randomDrink.createdBy !== undefined) {\n            if (user === undefined) {\n                return false;\n            } else {\n                return randomDrink.createdBy[1] === user._id ? true : false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    return (\n        <article className=\"largecard\" id={`card-${id}`}>\n\n            <section className=\"largecard__display\">\n\n                <h3 className=\"largecard__display--title\">{randomDrink ? randomDrink.name : 'Fetching Drink'}</h3>\n\n                <img className=\"largcard__display--image\" src={coverImage()} alt=\"large drink background\" style={{width: '100%', height: '100%'}}></img>\n\n            </section>\n\n            <section className=\"largecard__info\">\n\n                <span className=\"largecard__info--summary\">\n                    {randomDrink ? randomDrink.description : 'We\\'re coming as fast as we can to brink you a drink! If we take to long, please refresh us!'}\n                </span>\n                \n                <div className=\"largecard__info__actions\">\n                   \n                    <span \n                        className=\"largecard__info__actions--more\"\n                        onClick={() => openFull(id)}\n                    >\n                        More\n                    </span>\n\n                    {\n                        randomDrink ? (\n                            <SaveButton \n                                drink = {id}\n                                user = {user}\n                                className = {\"largecard__info__actions\"}\n                                refreshUser = {refreshUser}\n                                isAuthor = {isAuthor()}\n                            />\n                        ) : (\n                            <BlankState />\n                        )\n                    }\n\n                </div>\n\n            </section>\n\n        </article>\n    )\n}\n\nexport default CardLarge;","import React, { useState } from 'react';\n\nimport SaveButton from './SaveButton';\nimport BlankState from './BlankState';\n\nimport './../styles/cardfull.scss';\n\nconst CardFull = (props) => {\n\n    const { drink, id, user, closeFull, refreshUser } = props;\n\n    const drinkTags = () => {\n        if (drink !== undefined) {\n            const arrCategories = drink.categories.map(el => el);\n            const spiritCategoires = drink.spirits.map(el => el);\n            const tags = [...arrCategories, ...spiritCategoires];\n\n            return tags.map((el, index) =>\n                    <span key={`drink-${index}-tag`} className=\"card-tag-container--tag\">{el}</span>\n                )\n        } else {\n            return <BlankState />\n        }\n    };\n\n    const drinkIngredients = () => {\n        if (drink !== undefined) {\n            return drink.ingredients.map((el, index) =>\n                <li key={`drink-${index}-ingredient`}>{el}</li>\n            )\n        } else {\n            return <BlankState />\n        }\n    };\n\n    const drinkInstructions = () => {\n        if (drink !== undefined) {\n            return drink.instructions.map((el, index) =>\n                <li key={`drink-${index}-instruction`}>{el}</li>\n            )\n        } else {\n            return <BlankState />\n        }\n    };\n\n    const coverImage = () => {\n        return drink && drink?.coverImage !== undefined ? <img className=\"card-image\" src={drink.coverImage} alt=\"cocktail\"></img> : <img className=\"card-image\" src=\"https://media.istockphoto.com/vectors/alcohol-cocktail-drink-vector-neon-icon-food-blue-neon-illustration-vector-id1215989223?k=6&m=1215989223&s=170667a&w=0&h=wORytj0B6AzIiEDvf-5lCwTqw_i_3J6ASZPP9LkfE6s=\" alt=\"cocktail placeholder\"></img>;\n    };\n\n    const isAuthor = () => {\n        if (drink?.createdBy !== undefined) {\n            if (user === undefined) {\n                return false;\n            } else {\n                return drink.createdBy[1] === user?._id ? true : false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    //state for rendering delete confirmation\n    const [ confirmationOpen, setConfirmationOpen ] = useState(false);\n\n    function openConfirmation() {\n        setConfirmationOpen(true);\n    };\n\n    function closeConfirmation() {\n        setConfirmationOpen(false);\n    };\n\n    async function deleteDrink(e) {\n        e.preventDefault();\n        try {\n            if (drink?.imageId !== undefined) { //delete image ref in db, doesn't delete file\n                fetch(`api/v1/images/${drink.imageId}`, {\n                    method: 'DELETE'\n                });\n            }\n\n            fetch(`api/v1/drinks/${id}`, {\n                method: 'DELETE'\n            })\n            .then(() => {\n                window.location.reload();\n            });\n        } catch(err) {\n            console.log('ERROR');\n        }\n    }\n\n    const interactButton = () => {\n        if (isAuthor()) {\n            return (\n                <>\n                    <button className=\"card-body--delete\" onClick={() => openConfirmation()}>Delete Drink</button>\n                </>\n            )\n        } else {\n            return <SaveButton \n                drink = {id}\n                user = {user}\n                className = {\"card-save\"}\n                refreshUser = {refreshUser}\n                isAuthor = {isAuthor()}\n            />\n        }\n    };\n\n    return (\n        <div className=\"cardfull\" id={`card-${id}-full`}>\n\n            <section className=\"cardfull__header\">\n                <h3 className=\"cardfull__header--name\">{drink !== undefined ? drink.name : 'Drink name'}</h3>\n                <span className=\"cardfull__header--close\" onClick={() => closeFull(id)}>X</span>\n            </section>\n\n            <section className=\"card-body\">\n\n                <div className=\"card-body__display\">\n                    \n                    {coverImage()}\n\n                    <span className=\"card-body--author\">{drink !== undefined && drink.createdBy[0] !== undefined ? `By ${drink.createdBy[0]}` : ''}</span>\n\n                    <div className=\"card-tag-container\">\n                        {drinkTags()}\n                    </div>\n\n                    {interactButton()}\n\n                    {\n                        confirmationOpen ? (\n                            <div className=\"card-body--delete-confirmation\" onClick={() => closeConfirmation()}>\n                                <div className=\"card-body--delete-confirmation--center\">\n                                    <span>Are you sure?</span>\n                                    <div className=\"card-body--delete-confirmation--center-buttons\">\n                                        <button className=\"card-body--delete-confirmation--confirm\" onClick={(e) => deleteDrink(e)}>Delete</button>\n                                        <button className=\"card-body--delete-confirmation--cancel\" onClick={() => closeConfirmation()}>Cancel</button>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <></>\n                        )\n                    }\n\n                </div>\n\n                <div className=\"card-body__info\">\n\n                    <h4 className=\"card-summary--title\">Summary</h4>\n                    \n                    <div className=\"card-summary-container\">\n                        <p className=\"card-summary-container--summary\">\n                            {drink ? drink.description : 'Your drink is on the way'}\n                        </p>\n                    </div>\n\n                    <h4 className=\"card-ingredients--title\">Ingredients</h4>\n\n                    <div className=\"card-ingredients-container\">\n                        <ul className=\"card-ingredients-container__list\">\n                            {drinkIngredients()}\n                        </ul>\n                    </div>\n\n                    <h4 className=\"card-instructions--title\">Instructions</h4>\n\n                    <div className=\"card-instructions-container\">\n                        <ul className=\"card-instructions-container__list\">\n                            {drinkInstructions()}\n                        </ul>\n                    </div>\n\n                </div>\n\n            </section>\n            \n        </div>\n    );\n};\n\nexport default CardFull;","import React from 'react';\n\nimport './../styles/cardMini.scss';\nimport SaveButton from './SaveButton';\n\nconst CardMini = (props) => {\n\n    const { drink, id, user, loggedStatus, imageFallback, openFull } = props;\n\n    const isAuthor = () => {\n        if (drink.createdBy !== undefined) {\n            if (user === undefined) {\n                return false;\n            } else {\n                return drink.createdBy[1] === user._id ? true : false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    return (\n        <div \n            className=\"card__mini\" \n            id={`card-${id}-mini`} \n            key={`cardmini-${id}`}\n            onClick={() => openFull(id)}\n            // style={{background: `${drink.coverImage === undefined ? imageFallback : `url(${drink.coverImage})`}`}}\n        >\n\n            <img className=\"card__mini--image\" src={drink.coverImage === undefined ? imageFallback : drink.coverImage} alt=\"minified card background\"></img>\n\n            <span className=\"card__mini--name\">{drink.name}</span>\n\n            <SaveButton \n                drink = {id}\n                user = {user}\n                className = {\"card__mini\"}\n                loggedStatus = {loggedStatus}\n                isAuthor = {isAuthor()}\n            />\n\n        </div>\n    )\n}\n\nexport default CardMini\n","import React from 'react';\n\nimport CardMini from './CardMini';\nimport CardFull from './CardFull';\n\nimport './../styles/drinkgrid.scss';\n\nconst DrinkGrid = (props) => {\n\n    const { drinkResults, user, refreshUser, gridName } = props;\n\n    const imageFallback = \"https://media.istockphoto.com/vectors/alcohol-cocktail-drink-vector-neon-icon-food-blue-neon-illustration-vector-id1215989223?k=6&m=1215989223&s=170667a&w=0&h=wORytj0B6AzIiEDvf-5lCwTqw_i_3J6ASZPP9LkfE6s=\";\n\n    function openFullDisplay(ID) {\n        document.getElementById(`card-${ID}-full`).style.display = \"block\";\n    };\n    function closeFullDisplay(ID) {\n        document.getElementById(`card-${ID}-full`).style.display = \"none\";\n    };\n\n    const allCards = drinkResults.map((el, index) => {\n\n        return (\n            <article className=\"card\" key={`card-${el.id}`}>\n\n                <CardMini \n                    id={el.id}\n                    drink={el}\n                    user={user}\n                    imageFallback={imageFallback}\n                    openFull={openFullDisplay}\n                />\n\n                <CardFull \n                    id={el.id}\n                    drink={el}\n                    user={user}\n                    imageFallback={imageFallback}\n                    closeFull={closeFullDisplay}\n                    refreshUser = {refreshUser}\n                />\n\n            </article>\n        )\n    })\n\n    return (\n        <section className={gridName}>\n            {allCards}\n        </section>\n    );\n};\n\nexport default DrinkGrid;","import React, { useEffect, useState } from 'react'\n\nimport CardLarge from './CardLarge';\nimport CardFull from './CardFull';\n\nimport DrinkGrid from './DrinkGrid';\n\nimport './../styles/home.scss';\n\nconst Home = (props) => {\n\n    const { user, drinks, randomDrink, refreshUser } = props;\n\n    const [ createdDrinks, setCreatedDrinks ] = useState(undefined);\n\n    //create created drinks array\n    useEffect(() => {\n        if (user && drinks) {\n            const signedDrinks = drinks.filter(el => {\n                if (el.createdBy !== undefined) {\n                    if (el.createdBy[1] === user._id) {\n                        return el;\n                    }\n                }\n            });\n    \n            setCreatedDrinks(signedDrinks);\n        }\n\n    }, [drinks, user]);\n\n    function openFullDisplay(id) {\n        document.getElementById(`card-${id}-full`).style.display = \"block\";\n    };\n    function closeFullDisplay(id) {\n        document.getElementById(`card-${id}-full`).style.display = \"none\";\n    };\n\n    function openAuthenticate() {\n        document.getElementById('authenticate-form').style.display = \"block\";\n        document.getElementById('authenticate-form-blur').style.display = \"block\";\n        document.getElementById('nav').style.display = \"none\";\n    };\n\n    const homeContent = () => {\n        //homepage for guest\n        if (!user) {\n            return (\n                <>\n                    <p className=\"home-container--flavor\">\n                        Welcome to Drinkdex! We have many delicious cocktail recipes from users around the world. No matter if you're looking for a classic cocktail, a punch for a party or an original concoction, we have a cocktail recipe for every taste and occasion, just a shake, stir or pour away.\n                    </p>\n\n                    <h3 className=\"home-container--title\">Get Started</h3>\n\n                    <p className=\"home-container--flavor\">\n                        Lets get started! Use the bottom navigation bar to find drink recipes according to the type of drink or key ingedients. By signing up now you can save drinks to your profile and even post your own recipes for others to save and share!\n                    </p>\n\n                    <span className=\"home-container--btn\" onClick={() => openAuthenticate()}>Login/Sign Up</span>\n\n                    <br/>\n                    <br/>\n                    <br/>\n                </>\n            )\n        }\n        //homepage for logged in user\n        if (user) {\n            return (\n                <>\n                    <h3 className=\"home-container--title\">Saved Drinks</h3>\n\n                    {\n                        user.savedDrinks.length === 0 ? (\n                            <p className=\"home-container--flavor\">\n                                *You currently have no drinks saved\n                            </p>\n                        ) : (\n                            <DrinkGrid \n                                drinkResults = {user.savedDrinks}\n                                user = {user}\n                                refreshUser = {refreshUser}\n                                gridName = {'user-grid'}\n                            />\n                        )\n                    }\n\n                    <h3 className=\"home-container--title\">Created Drinks</h3>\n\n                    {\n                        createdDrinks === undefined || createdDrinks?.length === 0 ? (\n                            <p className=\"home-container--flavor\">\n                                *You haven't created any drinks\n                            </p>\n                        ) : (\n                            <DrinkGrid \n                                drinkResults = {createdDrinks}\n                                user = {user}\n                                refreshUser = {refreshUser}\n                                gridName = {'user-grid'}\n                            />\n                        )\n                    }\n\n                    {/* {createdDrinksGrid()} */}\n\n                    {/* <h3 className=\"home-container--title\">About</h3> */}\n                    \n                </>\n            )\n        }\n    }\n\n    const pendingId = () => randomDrink === undefined ? 'random' : randomDrink.id;\n\n    return (\n        <div className=\"home-container\">\n\n            <h2 className=\"home-container--title\">Random Drink</h2>\n\n            <CardLarge\n                randomDrink = {randomDrink}\n                id = {pendingId()}\n                user = {user}\n                openFull = {openFullDisplay}\n                refreshUser = {refreshUser}\n            />\n\n            <CardFull \n                drink = {randomDrink}\n                id = {pendingId()}\n                user = {user}\n                closeFull = {closeFullDisplay}\n                refreshUser = {refreshUser}\n            />\n\n            {homeContent()}\n\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState } from 'react';\n\nimport './../styles/createform.scss';\n\nconst CreateDrinkForm = (props) => {\n\n    const { user, backHome } = props;\n\n    const [ formName, setFormName ] = useState('');\n    const [ formSummary, setFormSummary ] = useState('');\n\n    const [ formIngredients, setFormIngredients ] = useState([]);\n    const [ ingredientSearch, setIngredientSearch ] = useState('');\n\n    const [ formInstructions, setFormInstructions ] = useState(['']);\n\n    const [ formCategories, setFormCategories ] = useState([]);\n\n    const [ formImage, setFormImage ] = useState(undefined);\n    const [ formUrl, setFormUrl ] = useState('');\n    \n    //methods for handling form changes\n    const formHandlers = {\n        changeName: (e) => {\n            setFormName(e.target.value);\n        },\n        changeSummary: (e) => {\n            setFormSummary(e.target.value);\n        },\n        changeIngSearch: (e) => {\n            let value = e.target.value\n            value = value.replace(/[^A-Za-z]/ig, '').toLowerCase()\n            setIngredientSearch(value);\n        },\n        changeAddIngredient: (e) => {\n            //don't allow adding to ingredients if state already has 6 entries\n            if (formIngredients.length > 5) {\n                document.getElementById('create-warning-ing').textContent = \"Please choose no more than 6 ingredients\";\n            } else {\n                document.getElementById('create-warning-ing').textContent = \"\";\n                setFormIngredients([ ...formIngredients, e.target.id ]);\n            }\n        },\n        changeRemoveIngredient: (e) => {\n            const item = e.target.getAttribute(\"name\");\n            document.getElementById('create-warning-ing').textContent = \"\";\n            setFormIngredients(formIngredients.filter(el => el !== item));\n        },\n        changeInstructions: (e) => {\n            document.getElementById('create-warning-ins').textContent = \"\";\n\n            const newArr = [...formInstructions];\n            let curIndex = e.target.id;\n            curIndex = curIndex.slice(4);\n            newArr.splice(curIndex, 1, e.target.value);\n\n            setFormInstructions(newArr);\n        },\n        changeAddInstruction: () => {\n            if (formInstructions.length > 4) {\n                document.getElementById('create-warning-ins').textContent = \"Please keep instructions under 6 steps\"\n            } else {\n                const newArr = [...formInstructions];\n                newArr.push('');\n                setFormInstructions(newArr);\n            }\n        },\n        changeRemoveInstruction: () => {\n            document.getElementById('create-warning-ins').textContent = \"\";\n\n            const newArr = [...formInstructions];\n            newArr.pop();\n            setFormInstructions(newArr);\n        },\n        changeCategories: (e) => {\n            //get shallow copy for state\n            const newArr = [...formCategories];\n\n            if (e.target.checked) { //change styles and push input value into state\n                document.getElementById(`${e.target.id}-label`).style.color = '#FFFFFF';\n                document.getElementById(`${e.target.id}-label`).style.background = \"#00a8cc\";\n\n                newArr.push(e.target.value);\n                setFormCategories(newArr);\n            } else { //change style back to default and filter out input value from state\n                document.getElementById(`${e.target.id}-label`).style.color = '#0c7b93';\n                document.getElementById(`${e.target.id}-label`).style.background = \"#FFFFFF\";\n\n                let removedArr = newArr.filter(el => el !== e.target.value);\n                setFormCategories(removedArr);\n            }\n        },\n        changeImage: (e) => {\n            setFormImage(document.getElementById(`${e.target.id}`).files[0]);\n            \n            const fileName = document.getElementById(`${e.target.id}`).files[0].name;\n\n            document.getElementById('file-chosen').textContent = '';\n            setFormUrl(fileName);\n        }\n    };\n\n    //filter terms for enumed categories and ingredients\n    const enums = {\n        ingredients: [\n            'vodka', 'whiskey', 'tequila', 'gin', 'rum', 'lemon juice', 'lemon', 'triple sec', 'club soda', 'tonic water',\n            'mint', 'orange peel', 'sugar', 'simple syrup', 'orange juice', 'baileys', 'kahlua', 'campari', 'sweet vermouth',\n            'dry vermouth', 'bitters', 'honey', 'water', 'ginger', 'ginger beer', 'olive', 'cola', 'sprite', 'salt', 'grenadine',\n            'lime', 'ginger ale', 'fruit juice', 'lime juice', 'pineapple', 'pineapple juice', 'cranberry juice', 'absinthe', 'coffee liqueur',\n            'amaretto', 'chocolate liqueur', 'egg white', 'maple syrup', 'peach liqueur', 'sake', 'arak', 'tomato juice', 'soy sauce', 'tobasco sauce',\n            'hot sauce', 'ouzo', 'jagermeister', 'milk', 'coffee', 'tea', 'clove', 'midori', 'cinnamon', 'ice', 'banana liqueur', 'cream',\n            'red wine', 'white wine', 'sangria', 'port wine'\n        ],\n        categories: [\n            'citrus', 'sweet', 'bitter', 'thick', 'strong', 'light', 'sour', 'fruity'\n        ]\n    };\n\n    //searchbar component for adding drink ingredients\n    const ingredientSearchbar = () => {\n\n        const filteredIngredients = enums.ingredients.filter(el => {\n            let firstPass = el.includes(ingredientSearch);\n            let secondPass = formIngredients.includes(el);\n\n            if (firstPass === true && secondPass === false) {\n                return el;\n            }\n        });\n\n        const searchResults = () => {\n            if (ingredientSearch.length === 0) {\n                return <></>\n            } else {\n                return filteredIngredients.map((el, index) => \n                    <div className=\"create__result\" key={`results-${index}`}>\n                        <li key={`results-text-${index}`}>{el}</li>\n                        <img \n                            id={el} \n                            key={`results-btn-${index}`}\n                            src=\"images/icons/plus.svg\"\n                            alt=\"add ingredient button\"\n                            onClick={(e) => formHandlers.changeAddIngredient(e)}\n                        >\n                        </img>\n                    </div>\n                )\n            }\n        };\n\n        return (\n            <>\n                <input \n                    className=\"create--search-input\" \n                    type=\"text\"\n                    onChange={(e) => formHandlers.changeIngSearch(e)}\n                    value={ingredientSearch}\n                    placeholder=\"Search for ingredients\"\n                >\n                </input>\n\n                <ul\n                    className=\"create__search\"\n                    id=\"ing-search\"\n                >\n                    {searchResults()}\n                </ul>\n            </>\n        )\n    };\n\n    //grid component of added drink ingredients\n    const addedIngredients = () => {\n        \n        const ingTags = () => {\n            if (formIngredients.length === 0) {\n                return <></>\n            } else {\n                return formIngredients.map((el, index) =>\n                    <div className=\"create__ing-container--ing\" key={`add-ing-${index}`}>\n                        <span \n                            key={`add-ing-${index}-span`}\n                            name={el}\n                            onClick={(e) => formHandlers.changeRemoveIngredient(e)}\n                        >\n                            {el}\n                        </span>\n                    </div>\n                )\n            }\n        };\n\n        if (formIngredients.length === 0) {\n            return <></>\n        } else {\n            return (\n                <div className=\"create__ing-container\">\n                    {ingTags()}\n                </div>\n            );\n        }\n    };\n\n    //textarea components for drink instructions\n    const drinkInstructions = () => {\n\n        return formInstructions.map((el, index) => \n            <div className=\"create__instruction\" key={`instruction-${index}`} id={`instruction-${index}`}>\n                <textarea\n                    required={true}\n                    rows=\"3\"\n                    placeholder={`Step ${index + 1}`}\n                    value={formInstructions[index]}\n                    minLength=\"4\"\n                    maxLength=\"80\"\n                    onChange={(e) => formHandlers.changeInstructions(e)}\n                    id={`ins-${index}`}\n                >\n                </textarea>\n                {\n                    index === formInstructions.length -1 ? (\n                        <>\n                            <img \n                                src=\"images/icons/plus.svg\"\n                                alt=\"add instructions button\"\n                                onClick={() => formHandlers.changeAddInstruction()}\n                            >\n                            </img>\n                            { index > 0 ? <span onClick={() => formHandlers.changeRemoveInstruction()}>x</span> : <></> }\n                        </>\n                    ) : (\n                        <></>\n                    )\n                }\n            </div>\n        );\n    };\n\n    //grid component of tags/categories for drinks\n    const drinkCategories = () => {\n\n        const gridItems = () => {\n            return enums.categories.map((el, index) =>\n                <div className=\"check-el\" key={`tag-${el}-${index}`}>\n                    <input\n                        type=\"checkbox\" \n                        className=\"create__categories__checkbox checkbox-part\" \n                        id={`check-${el}`} \n                        value={el} \n                        onChange={(e) => formHandlers.changeCategories(e)}\n                    ></input>\n                    <label htmlFor={`check-${el}`} id={`check-${el}-label`}>{el}</label>\n                </div>\n            )\n        };\n\n        return (\n            <section className=\"create__categories\">\n                {gridItems()}\n            </section>\n        );\n    };\n\n    //submit function for form post\n    async function submitDrink(e) {\n        e.preventDefault();\n\n        const authMessage = document.getElementById('auth-message');\n\n        if (!formIngredients.length) {\n            authMessage.textContent = 'Drink must have at least one ingredient';\n            return;\n        };\n        if (!formCategories.length) {\n            authMessage.textContent = 'Please choose at least one tag';\n            return;\n        };\n\n        try {\n            //initialize form data and set uploaded image file as data\n            const formData = new FormData();\n            formData.append('drinkImage', formImage);\n\n            //upload image and return file path for new drink\n            const imageRes = await fetch('api/v1/images', {\n                method: 'post',\n                body: formData\n            });\n\n            //image json for more form data\n            const image = await imageRes.json();\n\n            //determine form body req\n            const drinkBody = () => {\n                if (imageRes.ok) {\n                    return {\n                        'name': formName,\n                        'description': formSummary,\n                        'ingredients': formIngredients,\n                        'instructions': formInstructions,\n                        'categories': formCategories,\n                        'createdBy': [ user.username, user._id ],\n                        'coverImage': image.data.data.imagePath,\n                        'imageId': image.data.data._id\n                    }\n                } else {\n                    return {\n                        'name': formName,\n                        'description': formSummary,\n                        'ingredients': formIngredients,\n                        'instructions': formInstructions,\n                        'categories': formCategories,\n                        'createdBy': [ user.username, user._id ]\n                    }\n                }\n            };\n\n            //create new drink with drinkBody\n            let newDrink = await fetch('api/v1/drinks', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(drinkBody())\n            });\n\n            const response = await newDrink.json();\n\n            if (response.status === 'fail' || response.status === 'error') {\n                console.log('Error');\n\n                if (response.message.includes('duplicate key error')) {\n                    authMessage.textContent = \"Drink name is already taken\";\n                }\n            } else {\n                authMessage.textContent = \"Drink created!\";\n\n                window.location.reload();\n            }\n\n        } catch(err) {\n            console.log('Uncaught error occured');\n        }\n    };\n\n    return (\n        <div \n            className=\"create\"\n            id=\"create-form\"\n        >\n\n            <span className=\"create--close\" onClick={() => backHome()}>\n                X\n            </span>\n\n            <h3 className=\"create--head-title\">{formName === '' ? 'Drink Name' : formName}</h3>\n\n            <section className=\"create__container\">\n\n                <form\n                    className=\"create__form\"\n                    id=\"drink-form\"\n                    encType=\"mutlipart/form-data\"\n                    onSubmit={(e) => submitDrink(e)}\n                >\n\n                    <h4 className=\"create--title\">Overview</h4>\n\n                    <input\n                        required={true}\n                        className=\"create--input\" \n                        type=\"text\" \n                        id=\"create-name\"\n                        value={formName}\n                        pattern=\"([A-z0-9À-ž\\s]){2,15}\"\n                        maxLength=\"15\"\n                        onChange={(e) => formHandlers.changeName(e)}\n                        placeholder=\"Give your drink a name\"\n                    >\n                    </input>\n                    <label className=\"create--label\" htmlFor=\"create-name\">Drink Name</label>\n\n                    <div className=\"create__ta-container\">\n                        <textarea\n                            required={true}\n                            className=\"create--ta-container--textarea\"\n                            rows=\"3\"\n                            minLength=\"4\"\n                            maxLength=\"200\"\n                            id=\"create-summary\"\n                            value={formSummary}\n                            onChange={(e) => formHandlers.changeSummary(e)}\n                            placeholder=\"Describe your drink\"\n                        >\n                        </textarea>\n                        <label className=\"create--ta-container__label\" id=\"summary-label\" htmlFor=\"create-summary\">Summary</label>\n                    </div>\n\n                    <h4 className=\"create--title\">Ingredients</h4>\n\n                    {ingredientSearchbar()}\n\n                    {addedIngredients()}\n\n                    <span className=\"create--message\" id=\"create-warning-ing\"></span>\n\n                    <h4 className=\"create--title\">Instructions</h4>\n\n                    {drinkInstructions()}\n\n                    <span className=\"create--message\" id=\"create-warning-ins\"></span>\n\n                    <h4 className=\"create--title\">Tags</h4>\n\n                    {drinkCategories()}\n\n                    <h4 className=\"create--title\">Image</h4>\n\n                    <div className=\"create--upload-container\">\n\n                        <input \n                            className=\"create--upload\"\n                            type=\"file\"\n                            id=\"drink-upload\"\n                            onChange={(e) => formHandlers.changeImage(e)}\n                            name=\"drink-upload\"\n                            accept=\"image/png, image/jpeg\"\n                        >    \n                        </input>\n                        <label className=\"create--upload-label\" htmlFor=\"drink-upload\"><img className=\"create--upload-icon\" src=\"images/icons/upload.svg\" alt=\"upload file icon\"></img></label>\n\n                        <input\n                            required={true}\n                            className=\"create--url\"\n                            type=\"text\"\n                            placeholder=\"url\"\n                            id=\"drink-upload-url\"\n                            value={formUrl}\n                            readOnly={true}\n                        >\n                        </input>\n\n                    </div>\n                    <span className=\"create--file-chosen\" id=\"file-chosen\">No file chosen</span>\n\n                    <input\n                        className=\"create--btn\" \n                        type=\"submit\" \n                        form=\"drink-form\" \n                        value=\"Create Drink\"\n                    >\n                    </input>\n                    <span className=\"create--auth-message\" id=\"auth-message\"></span>\n\n                </form>\n\n            </section>\n\n        </div>\n    );\n};\n\nexport default CreateDrinkForm;","import React, { useState, useEffect } from 'react';\n\nimport CreateDrinkForm from './CreateDrinkForm';\n\nimport './../styles/navoptions.scss';\nimport BlankState from './BlankState';\n\nconst NavOptions = (props) => {\n\n    const { navState, toggleToGrid, backHome, user } = props;\n\n    const [ selectedOption, setSelectedOption ] = useState(undefined);\n\n    //to refresh the state of the component when navState is changed\n    useEffect(() => {\n        if (navState.categories === true) {\n            setSelectedOption('categories');\n        } else if (navState.spirits === true) {\n            setSelectedOption('spirits');\n        } else if (navState.create === true) {\n            setSelectedOption('create');\n        } else {\n            setSelectedOption(undefined);\n        }\n    }, [navState]);\n\n    //will expand over ON TOP of Hero. Upon selecting an option it will dexpand and Hero will be replaced with the drink grid\n\n    const categoryOptions = () => {\n        return <ul className=\"options-container__list\">\n            <li id=\"citrus\" onClick={(e) => toggleToGrid(e)}>citrus</li>\n            <li id=\"sweet\" onClick={(e) => toggleToGrid(e)}>sweet</li>\n            <li id=\"bitter\" onClick={(e) => toggleToGrid(e)}>bitter</li>\n            <li id=\"thick\" onClick={(e) => toggleToGrid(e)}>thick</li>\n            <li id=\"strong\" onClick={(e) => toggleToGrid(e)}>strong</li>\n            <li id=\"light\" onClick={(e) => toggleToGrid(e)}>light</li>\n        </ul>\n    }\n\n    const spiritOptions = () => { //more can be added later\n        return <ul className=\"options-container__list\">\n            <li id=\"vodka\" onClick={(e) => toggleToGrid(e)}>vodka</li>\n            <li id=\"gin\" onClick={(e) => toggleToGrid(e)}>gin</li>\n            <li id=\"tequila\" onClick={(e) => toggleToGrid(e)}>tequila</li>\n            <li id=\"whiskey\" onClick={(e) => toggleToGrid(e)}>whiskey</li>\n            <li id=\"rum\" onClick={(e) => toggleToGrid(e)}>rum</li>\n        </ul>\n    }\n\n    const createOption = () => {\n        return <CreateDrinkForm \n            user = {user}\n            backHome = {backHome}\n        />\n    }\n\n    const selectedNavOptions = () => {\n        if (selectedOption === 'categories') {\n            return categoryOptions();\n        }\n        if (selectedOption === 'spirits') {\n            return spiritOptions();\n        }\n        if (selectedOption === 'create') {\n            return createOption();\n        } \n        return <BlankState />\n    }\n\n    return (\n        <section className=\"options-container\">\n\n            {selectedNavOptions()}\n            \n        </section>\n    )\n}\n\nexport default NavOptions;","import React from 'react';\n\nimport './../styles/navbar.scss'\n\nconst Navbar = (props) => {\n\n    const { openOption, user } = props;\n\n    const activeStatus = () => {\n        if (user !== undefined) {\n            return 'active';\n        } else {\n            return 'inactive'\n        }\n    }\n\n    return (\n        <nav className=\"navbar\" id=\"nav\">\n            <div className=\"navbar__option\">\n                <img \n                    className=\"navbar__option--icon\" \n                    id=\"btn-categories\" \n                    onClick={(e) => openOption(e)} \n                    src=\"images/icons/cocktail.svg\" \n                    alt=\"drink categories\"\n                ></img>\n                <span className=\"navbar__option--label\" htmlFor=\"btn-categories\">Categories</span>\n            </div>\n            <div className=\"navbar__option\">\n                <img \n                    className=\"navbar__option--icon\" \n                    id=\"btn-spirits\" \n                    onClick={(e) => openOption(e)} \n                    src=\"images/icons/glass.svg\" \n                    alt=\"drink spirits\"\n                ></img>\n                <span className=\"navbar__option--label\" htmlFor=\"btn-spirits\">Spirits</span>\n            </div>\n            <div className=\"navbar__option\">\n                <img \n                    className={`navbar__option--icon ${activeStatus()}`} \n                    id=\"btn-create\" \n                    onClick={(e) => openOption(e)} \n                    src={user ? \"images/icons/recipe.svg\" : \"images/icons/recipe-disabled.svg\"} \n                    alt=\"crete a new drink\"\n                ></img>\n                <span className={`navbar__option--label ${activeStatus()}`} htmlFor=\"btn-create\">Create</span>\n            </div>\n        </nav>\n    )\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\n\nimport './../styles/base.scss';\n\nimport Loading from './Loading';\nimport Header from './Header';\nimport Home from './Home';\nimport DrinkGrid from './DrinkGrid';\nimport BlankState from './BlankState';\nimport NavOptions from './NavOptions';\nimport Navbar from './Navbar';\n\n/*\n    Notes: \n\n    16/4/21 - Fix form layout chaos caused by mobile keyboards\n    \n*/////////\n\nconst App = () => {\n\n////////// USER LOGIC\n\n    const [ user, setUser ] = useState(undefined);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n    //on load check for valid jwt and retrieve user data\n    useEffect(() => {\n        fetch('/api/v1/users/me', {\n            credentials: 'same-origin' //THIS IS HOW YOU DETECT HTTPONLY COOKIE, FUCK YEAH\n        })\n            .then(res => res.ok ? res.json() : res)\n            .then(resJson => {\n                if (resJson.status === 'success') {\n                    setUser(resJson.data.data);\n                } else {\n                    setUser(undefined);\n                };\n                setIsLoggedIn(resJson.status === 'success' ? true : false);\n            })\n            .then(() => {\n                setTimeout(() => { //delay to allow brief animation play and smoothing\n                    setIsLoading(false);\n                }, 800);\n            });\n    }, []);\n\n    async function refreshUser() {\n        fetch('/api/v1/users/me', {\n            credentials: 'same-origin' //THIS IS HOW YOU DETECT HTTPONLY COOKIE, FUCK YEAH\n        })\n            .then(res => res.ok ? res.json() : res)\n            .then(resJson => {\n                if (resJson.status === 'success') {\n                    setUser(resJson.data.data);\n                } else {\n                    setUser(undefined);\n                };\n                setIsLoggedIn(resJson.status === 'success' ? true : false);\n            });\n    };\n\n////////// DATA FETCH/SORT\n\n    const [ drinks, setDrinks ] = useState([]);\n    const [ randomDrink, setRandomDrink ] = useState(undefined);\n\n    //initial fetch of data for drinks and randomDrink\n    useEffect(() => {\n        //fetch all drinks\n        fetch('/api/v1/drinks')\n            .then(res => res.json())\n            .then(resJson => resJson.data.data)\n            .then(allDrinks => {\n                //set drinks\n                setDrinks(allDrinks);\n                //get random id from drinks and query it\n                let random = Math.floor(Math.random() * allDrinks.length);\n                return fetch(`/api/v1/drinks/${allDrinks[random].id}`);\n            })\n            .then(res => res.json())\n            .then(resJson => setRandomDrink(resJson.data.data));\n    }, []);\n\n    const [ drinkResults, setDrinkResults ] = useState([]);\n    const [ gridState, setGridState ] = useState(false);\n\n    //functionality for switching to results grid after a search\n    function toggleToGrid (e) {\n        const search = e.target.id;\n\n        let results = [];\n\n        //open grid and set gen data for drinks by spirits\n        if (search === 'vodka' || search === 'gin' || search === 'tequila' || search === 'whiskey' || search === 'rum') {\n            setGridState(true);\n            setNavState({categories: false, spirits: false, create: false});\n\n            drinks.forEach(el => {\n                if (el.spirits.includes(search)) {\n                    results.push(el);\n                };\n            });\n        };\n\n        //open grid and set gen data for drinks by categories\n        if (search === 'citrus' || search === 'sweet' || search === 'bitter' || search === 'thick' || search === 'strong' || search === 'light') {\n            setGridState(true);\n            setNavState({categories: false, spirits: false, create: false});\n\n            drinks.forEach(el => {\n                if (el.categories.includes(search)) {\n                    results.push(el);\n                };\n            });\n        };\n\n        //set result state\n        setDrinkResults(results);\n    };\n\n////////// NAVIGATION\n\n    //state to keep track of which nav option is open or not so as to only have one open at a time\n    const [ navState, setNavState ] = useState({ categories: false, spirits: false, create: false });\n\n    //onclick event for Navbar: changes state of navState accordingly\n    function openOption(e) {\n        const btn = e.target.id;\n\n        //close and open full cards\n        document.querySelector('.cardfull').style.display = \"none\";\n\n        if (btn === 'btn-categories') {\n            if (navState.categories === true) { return setNavState({categories: false, spirits: false, create: false}) }\n            setNavState({categories: true, spirits: false, create: false});\n        } else if (btn === 'btn-spirits') {\n            if (navState.spirits === true) { return setNavState({categories: false, spirits: false, create: false}) }\n            setNavState({categories: false, spirits: true, create: false});\n        } else if (btn === 'btn-create') {\n            if (navState.create === true) { return setNavState({categories: false, spirits: false, create: false}) }\n            setNavState({categories: false, spirits: false, create: true});\n        }\n    };\n\n    function openCard(e) {\n        const target = e.target.id;\n        document.getElementById(`${target}-full`).style.display = 'flex';\n    };\n\n    function backHome() {\n        setNavState({categories: false, spirits: false, create: false});\n        setGridState(false);\n    };\n\n////////// APP PARENT COMPONENTS\n\n    const appBodyRender = () => {\n        if (gridState === false) {\n            return <Home \n                randomDrink = {randomDrink}\n                drinks = {drinks}\n                user = {user}\n                openCard = {openCard}\n                refreshUser = {refreshUser}\n            />\n        }\n\n        return <DrinkGrid\n            drinkResults = {drinkResults}\n            user = {user}\n            openCard = {openCard}\n            refreshUser = {refreshUser}\n            gridName = {'drink-grid'}\n        />\n    };\n\n    const appRender = () => {\n        return isLoading ? (\n            <Loading />\n        ) : (\n            <main>\n                <Header \n                    loggedStatus = {isLoggedIn}\n                    user = {user}\n                    drinks = {drinks}\n                    backHome = {backHome}\n                />\n\n                {appBodyRender()}\n\n                {\n                    navState.categories === false &&\n                    navState.spirits === false &&\n                    navState.create === false ? (\n                        <BlankState />\n                    ) : (\n                        <NavOptions \n                            navState = {navState}\n                            toggleToGrid = {toggleToGrid}\n                            backHome = {backHome}\n                            user = {user}\n                        />\n                    )\n                }\n                <Navbar \n                    openOption = {openOption}\n                    user = {user}\n                />\n            </main>\n        );\n    };\n\n    return (\n        appRender()\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}